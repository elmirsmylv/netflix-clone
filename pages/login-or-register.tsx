import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { ChangeEvent, useEffect, useState } from "react";
import {
  useAuthState,
  useCreateUserWithEmailAndPassword,
  useSignInWithEmailAndPassword,
} from "react-firebase-hooks/auth";
import Redirect from "../components/utilities/Redirect";
import firebaseClient from "../firebase/client";
import firebase from "firebase/app";
import "firebase/auth";
import { ImSpinner2 } from "react-icons/im";

import styles from "../styles/login-or-register.module.scss";
import {NextRouter} from "next/dist/client/router";

type Creds = {
  email: string;
  password: string;
};

const emptyCreds: Creds = {
  email: "",
  password: "",
};

const Login: NextPage = () => {
  const [user, loading] = useAuthState(firebaseClient.auth());

  const router = useRouter();

  const [mode, setMode] = useState("login");
  const [creds, setCreds] = useState<Creds>(emptyCreds);
  const [error, setError] = useState<string>("");
  const [localLoading, setLocalLoading] = useState<boolean>(false);

  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {
    setError("");
    setCreds({ ...creds, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e: ChangeEvent<HTMLFormElement>) => {
    e.preventDefault();
    if (mode === "register") {
      register();
      // setMode("login");
      setCreds(emptyCreds);
    }
    if (mode === "login") {
      login();
      setCreds(emptyCreds);
      // user && router.push("/home");
    }
  };

  const login = async () => {
    setLocalLoading(true);
    await firebase
      .auth()
      .signInWithEmailAndPassword(creds.email, creds.password)
      .then(() => setLocalLoading(false))
      .catch((err) => {
        setLocalLoading(false);
        setError(err.message);
      });
  };

  const register = async () => {
    setLocalLoading(true);
    await firebase
      .auth()
      .createUserWithEmailAndPassword(creds.email, creds.password)
      .then((res) => {
        setLocalLoading(false);
      })
      .catch((err) => {
        setLocalLoading(false);
        setError(err.message);
      });
  };

  const provider = new firebase.auth.FacebookAuthProvider();

  const loginWithFacebook = async () => {
    await firebase
      .auth()
      .signInWithPopup(provider)
      .catch((err) => setError(err.message));
  };

  if (user) {
    return <Redirect to="/home" />;
  }

  if (loading) {
    return null;
  }

  return (
    <>
      <Head>
        <title>Netflix</title>
        <meta name="description" content="Generated by create next app" />
        <link
          rel="icon"
          href="https://assets.nflxext.com/us/ffe/siteui/common/icons/nficon2016.ico"
        />
      </Head>
      <div className={styles.container}>
        <div className={styles.background_wrapper}>
          <img src="https://assets.nflxext.com/ffe/siteui/vlv3/9b3267c9-5086-4550-92f1-eddc22a1f78e/d9c10aaf-ea9a-41d3-8f12-6ffd97ad10f3/AZ-en-20211004-popsignuptwoweeks-perspective_alpha_website_large.jpg" />
        </div>
        <div className={styles.header}>
          <a href="#">
            <img
              src="https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg"
              alt="Netflix Logo"
              className={styles.logo}
            />
          </a>
        </div>
        <div className={styles.body}>
          <div className={styles.login_container}>
            {mode === "login" ? <h3>Sign In</h3> : <h3>Sign Up</h3>}
            <div className={styles.input_section}>
              <form onSubmit={handleSubmit}>
                <div className={styles.input_data}>
                  <input
                    type="text"
                    name="email"
                    onChange={handleChange}
                    required
                  />
                  <label>Email or phone number</label>
                </div>
                <div className={styles.input_data}>
                  <input
                    type="password"
                    name="password"
                    onChange={handleChange}
                    required
                  />
                  <label>Passsword</label>
                </div>
                {error && <p className={styles.error_message}>{error}</p>}
                <div className={styles.button_section}>
                  {mode === "login" ? (
                    <button
                      type="submit"
                      className={`${localLoading && styles.disabled}`}
                    >
                      {localLoading ? (
                        <ImSpinner2 className={styles.spinner} />
                      ) : (
                        <>Sign In</>
                      )}
                    </button>
                  ) : (
                    <button
                      type="submit"
                      className={`${localLoading && styles.disabled}`}
                    >
                      {localLoading ? (
                        <ImSpinner2 className={styles.spinner} />
                      ) : (
                        <>Sign Up</>
                      )}
                    </button>
                  )}
                </div>
              </form>
            </div>

            <div className={styles.remember_section}>
              <div className={styles.remember}>
                <input type="checkbox" id="remember" />
                <label htmlFor="remember">Remember me</label>
              </div>
              <p>Need help?</p>
            </div>
            <div className={styles.facebook} onClick={loginWithFacebook}>
              <img
                src="https://assets.nflxext.com/ffe/siteui/login/images/FB-f-Logo__blue_57.png"
                className={styles.logo}
              ></img>
              <p>Login with Facebook</p>
            </div>
            <div className={styles.change_mode}>
              {mode === "login" ? (
                <>
                  <p>New to Netflix? </p>
                  <a onClick={() => setMode("register")}>Sign up now.</a>
                </>
              ) : (
                <>
                  <p>Have an account? </p>
                  <a onClick={() => setMode("login")}>Sign in now.</a>
                </>
              )}
            </div>
          </div>
        </div>
        <div className={styles.divider}></div>
        <div className={styles.footer}>
          <div className={styles.content}>
            <h4>Questions? Contact us.</h4>
            <div className={styles.links}>
              <div className={styles.link_item}>
                <a href="#">FAQ</a>
              </div>
              <div className={styles.link_item}>
                <a href="#">Help Center</a>
              </div>
              <div className={styles.link_item}>
                <a href="#">Terms of Use</a>
              </div>
              <div className={styles.link_item}>
                <a href="#">Privacy</a>
              </div>
              <div className={styles.link_item}>
                <a href="#">Cookie Preferences</a>
              </div>
              <div className={styles.link_item}>
                <a href="#">Corporate Information</a>
              </div>
            </div>
            <div className={styles.select_section}>
              <select id="lang-switcher" className={styles.select}>
                <option value="en" selected>
                  English
                </option>
                <option value="ru">Russian</option>
              </select>
            </div>
          </div>
        </div>
      </div>
    </>
  );
};

export default Login;
